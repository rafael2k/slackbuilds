#!/bin/bash
#
# slackbuild for kile, by Rudson R. Alves
# requires: none
# tested: broffice-2.0.4

CWD=`pwd`

# ----  Inicializa variáveis com o slackbuild  ------------
if [ -e "/root/.slackbuildrc" ]; then
  source /root/.slackbuildrc
elif [ -e "/etc/slackbuildrc" ]; then
  source /etc/slackbuildrc
fi

# --------  Variáveis de controle de versão  --------------
# Nome da fonte para a qual o slackbuild foi construído e
# o seu md5sum
SRC_ORIG="broffice.org.2.0.4.rpm.tar.bz2"
MD5_ORIG="3b78ddd41c7f8da098ec36f78642613f"
VERSION_ORIG=`echo $SRC_ORIG | sed 's/.*\.org\.\([0-9]\.[0-9]\.[0-9]\)\.rpm.*$/\1/'`
EXTENSION=`echo $SRC_ORIG | sed 's/.*\.rpm\.\(.*\..*\)$/\1/'`

# -------  Códigos de erro para o createpkg  --------------
ERROR_WGET=31;      ERROR_MAKE=32;      ERROR_INSTALL=33
ERROR_MD5=34;       ERROR_CONF=35;      ERROR_HELP=36
ERROR_TAR=37;       ERROR_MKPKG=38;     ERROR_GPG=39
ERROR_PATCH=40;     ERROR_VCS=41

# ---------  Inicializa variáveis de entrada  -------------
PACKAGE=`echo $SRC_ORIG | sed 's/\(.*\)\.org\..*$/\1/'`
ARCH="i686"
SRC_DIR=${SRC:=$CWD}
VERSION=${VERSION:=$VERSION_ORIG}
SRC=$PACKAGE.org.$VERSION.rpm.$EXTENSION
BUILD=${BUILD:=1rud}
TMP=${TMP:=/tmp}
REPOS=${REPOS:=$TMP}
PREFIX=${PREFIX:=/opt/kde}
OPTCONF=${OPTCONF:=""}
MD5=${MD5:=$MD5_ORIG}
URL=${URL:="http://ftp.unicamp.br/pub/broffice/stable/$VERSION/$SRC"}

# ----------------  SlackBuild Help  ----------------------
if [ "$1" = "--help" -o "$1" = "help" ]; then
    echo -e "\033[01;32m
Use: var1=\"value 1\" var2=\"value 2\" ... <package>.SlackBuild
where:
    ARCH=machine arch (i386, i486, i686, ...)
    VERSION=package version
    BUILD=package build version (default 1rud)
    SRC=source name of package
    SRC_DIR=source directory (default $PWD)
    TMP=temporary directory (default /tmp)
    REPOS=repository directory
    PREFIX=prefix from install package
    OPTCONF=options to pass from ./configure. To configure
            help, use OPTCONF=\"--help\"
    MD5=md5sum from package source
    URL=url from package source
\033[m"
    exit $ERROR_HELP
fi

# ----------------  Download fontes  ----------------------
# Fonte a ser compilada, com o path
SOURCE=$SRC_DIR/$PACKAGE/$SRC
mkdir -p $SRC_DIR/$PACKAGE 2>/dev/null
# Verifica existência do pacote em $SRC em $SRC_DIR
if [ ! -e $SOURCE ]; then
    echo -e "\n\n\033[01;32m Download $PACKAGE \n\033[m"
    wget "$URL" -P "$SRC_DIR/$PACKAGE"
    # Verifica se o
    if [ $? -ne 0 ]; then
        echo -e "\n\n\033[01;31m No such source file in $URL\n\033[m"
        exit $ERROR_WGET
    fi
fi

# ------------------  Checa md5sum  -----------------------
if [ "$SRC_ORIG" = "$SRC" -o "$MD5" != "$MD5_ORIG" -a "$MD5" != "no" ]; then
    SUM=`md5sum $SOURCE | awk '{print $1}'`
    if [ "$SUM" != "$MD5" ]; then
        echo -e "\n\n\033[01;31m MD5SUM error: run Slackbuild again \n\033[m"
        echo -e "\033[01;31m Remove $PACKAGE from $SRC_DIR and start Slackbuild again or use MD5=\"no\" \n\033[m"
        exit $ERROR_MD5
    fi
    echo -e "\n\n\033[01;32m Md5sum Ok \n\033[m"
fi

# --------------  Desempacota fontes  ---------------------
# Desempacota fontes em PKG_SRC=$TMP/$PACKAGE-source
PKG_SRC=$TMP/$PACKAGE-source
rm -rf $PKG_SRC 2>/dev/null
mkdir -p $PKG_SRC
# Desempacota $SOURCE em $TMP/$PACKAGE-source
tar xvf $SOURCE -C $PKG_SRC
if [ $? -ne 0 ]; then
    echo -e "\n\n\033[01;31m $SOURCE file error \n\033[m"
    exit $ERROR_TAR
fi
# Pega o nome do diretório das fontes independente de sua
# estrutura (package-version...)
PKG_DIR="$PKG_SRC"
cd $PKG_DIR/RPMS
# Converte pacotes rpm para tgz
echo -e "\n\n\033[01;32m Converte rpm packages \n\033[m"
ALLPKGS=$( ls *.rpm | wc -l )
j=1
for i in *.rpm; do
    echo -e "\033[01;33m [$j of $ALLPKGS] Convert $i...\033[m"
    rpm2tgz $i
    let j++
done
rm *.rpm 2>/dev/null
# Converte links do KDE
cd desktop-integration
echo -e "\033[01;33m Convert broffice.org-suse-menus...\033[m"
rpm2tgz broffice.org-suse-menus*.rpm
rm *.rpm *.deb 2>/dev/null

# Cria diretório de instalação
PKG=$TMP/$PACKAGE
rm -rf $PKG 2>/dev/null
mkdir -p $PKG

# Instala arquivos em $PKG_VERSION
echo -e "\n\n\033[01;32m Install packages \n\033[m"
echo -e "\033[01;33m Install broffice.org-suse-menus...\033[m"
tar xvf $( ls *.tgz ) -C $PKG
cd ..
j=1
for i in *.tgz; do
    echo -e "\033[01;33m [$j of $ALLPKGS] Install $i...\033[m"
    tar xvf $i -C $PKG
    rm $i
    let j++
done

# Altera diretório do kde
mv $PKG/opt/kde3 $PKG/opt/kde

cd $PKG/usr/bin
rm * 2>/dev/null

# broffice.org-2.0
cat << EOFBROFFICE > $PKG/usr/bin/broffice.org-2.0
#!/bin/sh
exec /opt/broffice.org2.0/program/soffice "$@"
EOFBROFFICE

# broffice.org-2.0-printeradmin
cat << EOFBRADMIN > $PKG/usr/bin/broffice.org-2.0-printeradmin
#!/bin/sh
exec /opt/broffice.org2.0/program/spadmin
EOFBRADMIN

chmod +x *

ln -s ../../opt/broffice.org2.0/program/soffice soffice

cd $PKG/usr/share/applications
rm *
for i in $( ls ../../../opt/broffice.org2.0/share/xdg/* ); do
    NAME=$( echo $i | sed 's/.*xdg\/\(.*\.desktop\)$/\1/' )
    ln -s $i $NAME
done

# -----------------  Stripa código  -----------------------
cd $PKG
find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

# ----------------  Cria slack-desc  ----------------------
mkdir $PKG/install
cat << EOF > install/slack-desc
# HOW TO EDIT THIS FILE:
# The "handy ruler" below makes it easier to edit a package description.  Line
# up the first '|' above the ':' following the base package name, and the '|' on
# the right side marks the last column you can put a character in.  You must make
# exactly 11 lines for the formatting to be correct.  It's also customary to
# leave one space after the ':'.

        |-----handy-ruler------------------------------------------------------|
broffice: BrOffice.org Versão $VERSION
broffice:
broffice: Pacote do BrOffice construído a partir do pacote rpm pelo
broffice: broffice.Slackbuild.
broffice:
broffice: O BrOffice.org/OpenOffice.org é a mais aberta e democrática suíte de
broffice: escritório disponível, composto por:  Writer - editor; Calc - plani-
broffice: lha; Impress - apresentações; Draw - desenhos vetoriais; Math -
broffice: Editor de equações; Base - Banco de dados
broffice: URL: http://www.openoffice.org.br
EOF

# -----------------  Documentações  -----------------------
# Criar diretório de documentação
PKG_DOC=$PKG/usr/doc/$PACKAGE-$VERSION
mkdir -p $PKG_DOC
cp $PKG_SRC/licenses/* $PKG_DOC
cp $PKG_SRC/readmes/* $PKG_DOC

# ---------------  Constroi o pacote  ---------------------
echo -e "\n\n\033[01;32m makepkg -c y -l y $REPOS/$PACKAGE-$VERSION-$ARCH-$BUILD.tgz \n\033[m"
makepkg -c y -l y $REPOS/$PACKAGE-$VERSION-$ARCH-$BUILD.tgz
if [ $? -ne 0 ]; then
    exit $ERROR_MKPKG
fi

# -----------  Remove arquivos temporários  ---------------
if [ "$CLEANUP" = "yes" ]; then
    echo -e "\n\n\033[01;32m Remove files... \n\033[m"
    rm -rf $PKG $PKG_SRC
fi
