#!/bin/bash
#
#  babytrans.SlackBuild is free software; you can redistribute
#  it and/or modify it under the terms of the GNU General Public License as
#  published by the Free Software Foundation; either version 2 of the License,
#  or any later version.
#
#  babytrans.SlackBuild is distributed in the hope that it will
#  be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
#  Public License for more details.
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write to the Free Software Foundation, Inc.,
#  59 Temple Place - Suite 330, Boston, MA 02111-1307, USA
#
# slackbuild for babytrans, by Rudson R. Alves
# requires: gtk+ 
# tested: babytrans-0.9.1
#

# Look for slackbuildrc
if [ -f ~/.slackbuildrc ]; then
  source ~/.slackbuildrc
elif [ -f /etc/slackbuildrc ]; then
  source /etc/slackbuildrc
fi

# Set variables
CWD="$(pwd)"
SRC_NAME="babytrans"
PKG_NAME="babytrans"
ARCH=${ARCH:=i486}
SRC_VERSION=${VERSION:=0.9.1}
PKG_VERSION="$(echo "$SRC_VERSION" | tr '[[:blank:]-]' '_')"
BUILD=${BUILD:=1rra}
SRC_DIR=${SRC_DIR:=$CWD}/$PKG_NAME
TMP=${TMP:=/tmp}
PKG=${PKG:=$TMP/package-$PKG_NAME}
REPOS=${REPOS:=$TMP}
PREFIX=${PREFIX:=/usr}
PKG_WORK="$TMP/$SRC_NAME"
CONF_OPTIONS=${CONF_OPTIONS:="--sysconfdir=/etc --localstatedir=/var --program-prefix= --program-suffix="}
NUMJOBS=${NUMJOBS:="-j4"}

# Set system libraries' path and optmization flags based on $ARCH
LIBDIR="$PREFIX/lib"

if [ "$ARCH" = "i386" ]; then
  SLKCFLAGS="-O2 -march=i386 -mcpu=i686"
elif [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mcpu=i686"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686"
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIR="$PREFIX/lib64"
  LDFLAGS="-L/lib64 -L/usr/lib64"
fi

# Set error codes (used by createpkg)
ERROR_WGET=31;      ERROR_MAKE=32;      ERROR_INSTALL=33
ERROR_MD5=34;       ERROR_CONF=35;      ERROR_HELP=36
ERROR_TAR=37;       ERROR_MKPKG=38;     ERROR_GPG=39
ERROR_PATCH=40;     ERROR_VCS=41;       ERROR_MKDIR=42

# Clean up any leftovers of previous builds
rm -rf "$PKG_WORK" 2> /dev/null
rm -rf "$PKG" 2> /dev/null

# Create directories if necessary
mkdir -p "$SRC_DIR" || exit $ERROR_MKDIR
mkdir -p "$PKG" || exit $ERROR_MKDIR
mkdir -p "$REPOS" || exit $ERROR_MKDIR
mkdir -p "$PKG_WORK" || exit $ERROR_MKDIR

# Dowload source if necessary
SRC="$SRC_NAME-$VERSION.tar.bz2"
URL="http://fjolliton.free.fr/babytrans/$SRC"
DIC_URL=ftp://ftp.ac-grenoble.fr/ge/languages/babylon_dict

if [ ! -s "$SRC_DIR/$SRC" ] || ! bunzip2 -t "$SRC_DIR/$SRC" 2> /dev/null; then
  wget "$URL" -O "$SRC_DIR/$SRC" || exit $ERROR_WGET
fi

# Get dictionaries
DIC_LIST="EngtoDut.dic.gz EngtoEng.dic.gz EngtoFre.dic.gz 
        EngtoGer.dic.gz EngtoHeb.dic.gz EngtoIta.dic.gz EngtoJpn.dic.gz 
        EngtoPor.dic.gz EngtoSpa.dic.gz english.dic.gz english2.dic.gz"

for i in $DIC_LIST; do
    [ ! -e $SRC_DIR/$i ] && wget $DIC_URL/$i -P $SRC_DIR/
done

[ ! -e $SRC_DIR/dictionary ] && wget $DIC_URL/dictionary -P $SRC_DIR/

# Untar
cd "$PKG_WORK"
tar --no-same-owner --no-same-permissions -xvf "$SRC_DIR/$SRC" || exit $ERROR_TAR
PKG_SRC="$PWD/`ls -l | awk '/^d/ { print $NF }'`"
cd "$PKG_SRC"

# Configure
CFLAGS="$SLKCFLAGS" \
  CXXFLAGS="$SLKCFLAGS" \
  ./configure \
  --prefix="$PREFIX" --libdir="$LIBDIR" $CONF_OPTIONS || exit $ERROR_CONF

# Add assert.h include
sed -i '/^#include "fred_sstream"/ { p; s/.*/#include <assert.h>/; }' src/main.cc
# Compile
make $NUMJOBS || exit $ERROR_MAKE

# Install
make install DESTDIR="$PKG" || exit $ERROR_INSTALL

mkdir -p $PKG/usr/local/lib/babytrans
mkdir -p $PKG/usr/share/babytrans
mkdir -p $PKG/usr/share/applications
rm -rf $PKG/usr/share/applets

cp $SRC_DIR/*.dic.gz $PKG/usr/local/lib/babytrans/
cp $SRC_DIR/dictionary $PKG/usr/share/babytrans/

gunzip $PKG/usr/local/lib/babytrans/*.gz

cat << KDE_DESK > $PKG/usr/share/applications/babytrans.desktop
[Desktop Entry]
Comment=An interface for babylon translator
Categories=Education;Languages;
Exec=babytrans --activate-goad-server babytrans
GenericName=Babytrans
Icon=kbabel
Name=Babytrans
StartupNotify=true
Terminal=False
Type=Application
X-KDE-SubstituteUID=false
KDE_DESK

# Strip binaries
( cd "$PKG"
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | \
    xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | \
    xargs strip --strip-unneeded 2> /dev/null
)

# Install documentation
DOCS="ABOUT-NLS AUTHORS COPYING ChangeLog INSTALL NEWS README README.french README.german README.gnome README.italian README.portuguese README.spanish THANKS"
mkdir -p "$PKG/usr/doc/$PKG_NAME-$PKG_VERSION" || exit $ERROR_MKDIR
for doc in $DOCS; do
  if [ -f "$doc" ]; then
    cp -a $doc "$PKG/usr/doc/$PKG_NAME-$PKG_VERSION"
  fi
done

# Add package description (slack-desc)
mkdir -p "$PKG/install" || exit $ERROR_MKDIR
cat << EODESC > "$PKG/install/slack-desc"
# HOW TO EDIT THIS FILE:
# The "handy ruler" below makes it easier to edit a package description. Line
# up the first '|' above the ':' following the base package name, and the '|'
# on the right side marks the last column you can put a character in. You must
# make exactly 11 lines for the formatting to be correct.  It's also
# customary to leave one space after the ':'.

         |-----handy-ruler----------------------------------------------------|
babytrans: babytrans by Slack.Sarava
babytrans:
babytrans: BabyTrans is a graphical interface for the Babylon Translator
babytrans: dictionaries (available under Windows). (More information:
babytrans: <http://www.babylon.com>)
babytrans: Copy the dictionary files from Babylon Translator either in the
babytrans: /usr/share/babytrans directory or in another directory that you
babytrans: indicate in the configuration.
babytrans: The files to copy are:
babytrans: - english.dic (common for all languages)
babytrans: - Engto***.dic (with *** depending on the language)
EODESC

# Copy slack-required
mkdir -p "$PKG/install" || exit $ERROR_MKDIR
if [ -f "$CWD/slack-required" ]; then
  cp $CWD/slack-required $PKG/install
fi

# Build the package
cd "$PKG"
makepkg -l y -c n "$REPOS/$PKG_NAME-$PKG_VERSION-$ARCH-$BUILD.tgz" || exit $ERROR_MKPKG

# Delete source and build directories if requested
if [ "$CLEANUP" == "yes" ] || [ "$1" = "--cleanup" ]; then
  rm -rf "$PKG_WORK" "$PKG"
fi
