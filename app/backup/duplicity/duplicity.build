#!/bin/bash
#
# build script for duplicity
# by rhatto at riseup.net by rhatto | gpl
# build it with slacktrack, example:
#
#   ARCH=x86_64 slacktrack -jefkzp "duplicity-0.4.2-x86_64-1rha.tgz" "./duplicity.build"
# 

if [ "$INTERACT" != "no" ]; then
  echo "Hit ENTER do continue, Crtl-C to abort"
  read crap
else
  echo sleeping 3 seconds...
  sleep 3
fi

CWD="`pwd`"

if [ -f "/etc/slackbuildrc" ]; then
  source /etc/slackbuildrc
fi

if [ -f "~/.slackbuildrc" ]; then
  source ~/.slackbuildrc
fi

# default settings
PACKAGE="duplicity"
TMP=${TMP:=/tmp}
VERSION=${VERSION:=0.4.2}
ARCH=${ARCH:=i386}
BUILD=${BUILD:=1rha}
SRC_DIR=${SRC:=$CWD}

# -------  error codes for createpkg  --------------
ERROR_WGET=31;      ERROR_MAKE=32;      ERROR_INSTALL=33
ERROR_MD5=34;       ERROR_CONF=35;      ERROR_HELP=36
ERROR_TAR=37;       ERROR_MKPKG=38      ERROR_GPP=39
ERROR_PATCH=40

if [ "$ARCH" == "x86_64" ]; then
  LIBDIR=/usr/lib64
else
  LIBDIR=/usr/lib
fi

RTOOL="wget"
PACKAGE_EXT="gz"
SRC="$PACKAGE-$VERSION.tar.$PACKAGE_EXT"
URL="http://savannah.nongnu.org/download/duplicity/$SRC"

SRC_DIR="$SRC_DIR/$PACKAGE"

if [ ! -d "$SRC_DIR" ]; then
  mkdir -p $SRC_DIR
fi

if [ "$RTOOL" == "wget" ] && [ ! -f "$SRC_DIR/$SRC" ]; then
 wget "$URL" -O "$SRC_DIR/$SRC" || exit $ERROR_WGET
fi

TMP="$TMP/$PACKAGE"

if [ ! -d "$TMP" ]; then
  mkdir -p $TMP
fi

cd $TMP

tar xvf $SRC_DIR/$SRC || exit $ERROR_TAR
cd $PACKAGE-$VERSION

# config and install!
mkdir -p /install

python setup.py install --prefix=/usr/ || exit $ERROR_INSTALL

# make the package

cat << EOF > /install/slack-desc
# HOW TO EDIT THIS FILE:
# The "handy ruler" below makes it easier to edit a package description.  Line
# up the first '|' above the ':' following the base package name, and the '|'
# on the right side marks the last column you can put a character in.  You must
# make exactly 11 lines for the formatting to be correct.  It's also
# customary to leave one space after the ':'.

         |-----handy-ruler-----------------------------------------------------|
duplicity: duplicity (encrypted bandwidth-efficient backup)
duplicity:
duplicity: duplicity is an incremental backup tool that backs up files and
duplicity: directories by building tar-format volumes and uploading them to a
duplicity: file server. By default, these volumes will be GPG encrypted, although
duplicity: simple gzipping is also supported. It supports local, FTP, and ssh/scp
duplicity: back-ends. Because it uses librsync, archives only record the parts
duplicity: of files that have changed since the last backup. It supports deleted
duplicity: files, full Unix permissions, directories, symbolic links, and fifos,
duplicity: but currently not hard links.
duplicity:
EOF

