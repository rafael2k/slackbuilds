#!/bin/bash
#
# slackbuild for kile, by Rudson R. Alves
# requires: none
# tested: skype_staticQT-1.3.0.53

CWD=`pwd`

# ----  Inicializa variáveis com o slackbuild  ------------
if [ -e "/root/.slackbuildrc" ]; then
  source /root/.slackbuildrc
elif [ -e "/etc/slackbuildrc" ]; then
  source /etc/slackbuildrc
fi

# --------  Variáveis de controle de versão  --------------
# Nome da fonte para a qual o slackbuild foi construído e
# o seu md5sum
SRC_ORIG="skype_staticQT-1.3.0.53-generic.tar.bz2"
MD5_ORIG="9ca128f45c73cd76862260bc6b9f196c"
VERSION_ORIG="1.3.0.53"
EXTENSION=`echo $SRC_ORIG | sed 's/\(.*\)_.*-\(.*\)-generic\.\(.*\)$/\3/'`

# -------  Códigos de erro para o createpkg  --------------
ERROR_WGET=31;      ERROR_MAKE=32;      ERROR_INSTALL=33
ERROR_MD5=34;       ERROR_CONF=35;      ERROR_HELP=36
ERROR_TAR=37;       ERROR_MKPKG=38;     ERROR_GPG=39
ERROR_PATCH=40;     ERROR_VCS=41

# ---------  Inicializa variáveis de entrada  -------------
PACKAGE="skype"
ARCH=${ARCH:=i468}
SRC_DIR=${SRC:=$CWD}
VERSION=${VERSION:=$VERSION_ORIG}
SRC=${PACKAGE}_staticQT-$VERSION-generic.$EXTENSION
BUILD=${BUILD:=1rud}
TMP=${TMP:=/tmp}
REPOS=${REPOS:=$TMP}
PREFIX=${PREFIX:=/opt/kde}
OPTCONF=${OPTCONF:=""}
MD5=${MD5:=$MD5_ORIG}
URL=${URL:="http://www.skype.com/go/getskype-linux-static"}

# ----------------  SlackBuild Help  ----------------------
if [ "$1" = "--help" -o "$1" = "help" ]; then
    echo -e "\033[01;32m
Use: var1=\"value 1\" var2=\"value 2\" ... <package>.SlackBuild
where:
    ARCH=machine arch (i386, i486, i686, ...)
    VERSION=package version
    BUILD=package build version (default 1rud)
    SRC=source name of package
    SRC_DIR=source directory (default $PWD)
    TMP=temporary directory (default /tmp)
    REPOS=repository directory
    PREFIX=prefix from install package
    OPTCONF=options to pass from ./configure. To configure
            help, use OPTCONF=\"--help\"
    MD5=md5sum from package source
    URL=url from package source
\033[m"
    exit $ERROR_HELP
fi

# ----------------  Download fontes  ----------------------
# Fonte a ser compilada, com o path
SOURCE=$SRC_DIR/$PACKAGE/$SRC
# Verifica existência do pacote em $SRC em $SRC_DIR
if [ ! -e $SOURCE ]; then
    echo -e "\n\n\033[01;32m Download $SRC \n\033[m"
    wget "$URL" -P "$SRC_DIR/$PACKAGE/"
    # Verifica se o
    if [ $? -ne 0 ]; then
        echo -e "\n\n\033[01;31m No such source file in $URL\n\033[m"
        exit $ERROR_WGET
    fi
fi

# ------------------  Checa md5sum  -----------------------
if [ "$SRC_ORIG" = "$SRC" -o "$MD5" != "$MD5_ORIG" -a "$MD5" != "no" ]; then
    SUM=`md5sum $SOURCE | awk '{print $1}'`
    if [ "$SUM" != "$MD5" ]; then
        echo -e "\n\n\033[01;31m MD5SUM error: run Slackbuild again \n\033[m"
        echo -e "\033[01;31m Remove $PACKAGE from $SRC_DIR and start Slackbuild again or use MD5=\"no\" \n\033[m"
        exit $ERROR_MD5
    fi
    echo -e "\n\n\033[01;32m Md5sum Ok \n\033[m"
fi

# --------------  Desempacota fontes  ---------------------
# Desempacota fontes em PKG_SRC=$TMP/$PACKAGE-source
PKG=$TMP/$PACKAGE
rm -rf $PKG 2>/dev/null
mkdir -p $PKG/opt
# Desempacota $SOURCE em $TMP/$PACKAGE-source
tar xvf $SOURCE -C $PKG/opt
if [ $? -ne 0 ]; then
    echo -e "\n\n\033[01;31m $SOURCE file error \n\033[m"
    exit $ERROR_TAR
fi

mkdir -p $PKG/usr/share/applications/
cd $PKG/opt/
SKYPE_NAME=$( ls )
SKYPE_DIR=$PKG/opt/$SKYPE_NAME

# Cria entrada em menu
cp $SKYPE_DIR/skype.desktop $PKG/usr/share/applications/

# Cria link para aplicativo
(
    mkdir -p $PKG/usr/bin
    cd $PKG/usr/bin
    ln -s ../../opt/$SKYPE_NAME/skype skype
)

# Copiar icones
mkdir -p $PKG/opt/kde/share/icons/hicolor/16x16/apps
mkdir -p $PKG/opt/kde/share/icons/hicolor/32x32/apps
mkdir -p $PKG/opt/kde/share/icons/hicolor/48x48/apps
cp $SKYPE_DIR/icons/skype_16_32.png $PKG/opt/kde/share/icons/hicolor/16x16/apps/skype.png
cp $SKYPE_DIR/icons/skype_32_32.png $PKG/opt/kde/share/icons/hicolor/32x32/apps/skype.png
cp $SKYPE_DIR/icons/skype_48_32.png $PKG/opt/kde/share/icons/hicolor/48x48/apps/skype.png

# -----------------  Stripa código  -----------------------
cd $PKG
find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

# ----------------  Cria slack-desc  ----------------------
mkdir $PKG/install
cat << EOF > install/slack-desc
# HOW TO EDIT THIS FILE:
# The "handy ruler" below makes it easier to edit a package description.  Line
# up the first '|' above the ':' following the base package name, and the '|' on
# the right side marks the last column you can put a character in.  You must make
# exactly 11 lines for the formatting to be correct.  It's also customary to
# leave one space after the ':'.

     |--------handy-ruler------------------------------------------------------|
skype: Skype 1.3.0.53
skype:
skype: Skype is a little piece of software that lets you talk over the
skype: Internet to anyone, anywhere in the world for free.
skype:
skype:
skype:
skype:
skype:
skype:
EOF

# -----------------  Documentações  -----------------------
# Criar diretório de documentação
PKG_DOC=$PKG/usr/doc/$PACKAGE-$VERSION
mkdir -p $PKG_DOC
cp $SKYPE_DIR/{LICENSE,README} $PKG_DOC

# ---------------  Constroi o pacote  ---------------------
echo -e "\n\n\033[01;32m makepkg -c y -l y $REPOS/$PACKAGE-$VERSION-$ARCH-$BUILD.tgz \n\033[m"
makepkg -c y -l y $REPOS/$PACKAGE-$VERSION-$ARCH-$BUILD.tgz
if [ $? -ne 0 ]; then
    exit $ERROR_MKPKG
fi

# -----------  Remove arquivos temporários  ---------------
if [ "$CLEANUP" = "yes" ]; then
    echo -e "\n\n\033[01;32m Remove files... \n\033[m"
    rm -rf $PKG $PKG_SRC
fi
