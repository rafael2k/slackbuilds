--- no_alter/postfix-2.2.3/src/smtpd/smtpd.c	2005-03-09 20:07:43.000000000 +0000
+++ postfix-2.2.3/src/smtpd/smtpd.c	2005-05-31 14:15:50.000000000 +0000
@@ -858,6 +858,7 @@
 char   *var_smtpd_sasl_appname;
 char   *var_smtpd_sasl_realm;
 char   *var_smtpd_sasl_exceptions_networks;
+int     sasl_authenticated;
 char   *var_filter_xport;
 bool    var_broken_auth_clients;
 char   *var_perm_mx_networks;
@@ -1947,10 +1948,14 @@
      * intermediate proxy.
      */
     if (!state->proxy || state->xforward.flags == 0) {
+      if (sasl_authenticated == 1) {
+	out_fprintf(out_stream, REC_TYPE_NORM, "Received: from localhost (localhost [127.0.0.1])");
+	 } else {
 	out_fprintf(out_stream, REC_TYPE_NORM,
                     "Received: from %s (%s [%s])",
                     state->helo_name ? state->helo_name : state->name,
                     state->name, state->rfc_addr);
+	 }
 #ifdef USE_TLS
         if (var_smtpd_tls_received_header && state->tls_context) {
             out_fprintf(out_stream, REC_TYPE_NORM,
--- no_alter/postfix-2.2.3/src/smtpd/smtpd_sasl_proto.c	2004-12-11 01:16:39.000000000 +0000
+++ postfix-2.2.3/src/smtpd/smtpd_sasl_proto.c	2005-05-31 14:17:47.000000000 +0000
@@ -118,6 +118,8 @@
 
 #ifdef USE_SASL_AUTH
 
+int sasl_authenticated;
+
 /* smtpd_sasl_auth_cmd - process AUTH command */
 
 int     smtpd_sasl_auth_cmd(SMTPD_STATE *state, int argc, SMTPD_TOKEN *argv)
@@ -126,6 +128,7 @@
     char   *initial_response;
     char   *err;
 
+    sasl_authenticated = 0;
     if (var_helo_required && state->helo_name == 0) {
         state->error_mask |= MAIL_ERROR_POLICY;
         smtpd_chat_reply(state, "503 Error: send HELO/EHLO first");
@@ -169,6 +172,7 @@
 	return (-1);
     }
     smtpd_chat_reply(state, "235 Authentication successful");
+    sasl_authenticated = 1;
     return (0);
 }
 
--- no_alter/postfix-2.2.3/src/smtpd/smtpd_sasl_proto.h	2000-03-16 19:34:58.000000000 +0000
+++ postfix-2.2.3/src/smtpd/smtpd_sasl_proto.h	2005-05-31 14:18:20.000000000 +0000
@@ -17,6 +17,8 @@
 extern void smtpd_sasl_mail_log(SMTPD_STATE *);
 extern void smtpd_sasl_mail_reset(SMTPD_STATE *);
 
+extern int sasl_authenticated;
+
 /* LICENSE
 /* .ad
 /* .fi
