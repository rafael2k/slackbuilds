#!/bin/bash
#
# Got it from ftp://ftp.slackware.com/pub/slackware/slackware-11.0/patches/source/file/file.SlackBuild
# Small changes by rhatto at riseup.net
#

if [ -s "slack-required" ]; then
  echo Recomended and required packages for building cairo are:
  cat slack-required | sed -e 's/^/\t/'
  if [ "$INTERACT" != "no" ]; then
    echo If you dont have those installed, press Ctrl-C. Otherwise, hit ENTER.
    read crap
#  else
#    echo Sleeping 3 seconds...
#    sleep 3
  fi
fi

CWD="`pwd`"

if [ -f ~/.slackbuildrc ]; then
  source ~/.slackbuildrc
elif [ -f /etc/slackbuildrc ]; then
  source /etc/slackbuildrc
fi

# default settings
PACKAGE="file"
ARCH=${ARCH:=i486}
VERSION=${VERSION:=4.20}
BUILD=${BUILD:=1rha}
SRC_DIR=${SRC:=$CWD}
TMP=${TMP:=/tmp}
REPOS=${REPOS:=$TMP}

if [ "$ARCH" == "x86_64" ]; then
  export LDFLAGS="-L/lib64 -L/usr/lib64"
  LIBDIR=/usr/lib64
else
  LIBDIR=/usr/lib
fi

# -------  error codes for createpkg  --------------
ERROR_WGET=31;      ERROR_MAKE=32;      ERROR_INSTALL=33
ERROR_MD5=34;       ERROR_CONF=35;      ERROR_HELP=36
ERROR_TAR=37;       ERROR_MKPKG=38;     ERROR_GPG=39
ERROR_PATCH=40

RTOOL="wget"
PACKAGE_EXT="gz"
SRC="$PACKAGE-$VERSION.tar.$PACKAGE_EXT"
URL="ftp://ftp.astron.com/pub/file/$SRC"

SRC_DIR="$SRC_DIR/$PACKAGE"
mkdir -p $SRC_DIR

if [ "$RTOOL" == "wget" ] && [ ! -f "$SRC_DIR/$SRC" ]; then
  wget "$URL" -O "$SRC_DIR/$SRC" || exit $ERROR_WGET
fi

TMP="$TMP/$PACKAGE"
PKG=$TMP/package-file
rm -rf $TMP
mkdir -p $PKG
cd $TMP

tar xjvf $CWD/file-$VERSION.tar.bz2 || exit $ERROR_TAR
cd file-$VERSION

if [ "$VERSION" == "4.20" ]; then
  cd src
  zcat $CWD/patch-4.20-REG_STARTEND.gz | patch -p0 --verbose || exit 1
  cd ..
fi

chown -R root:root .
find . -perm 666 -exec chmod 644 {} \;
find . -perm 664 -exec chmod 644 {} \;
find . -perm 600 -exec chmod 644 {} \;
find . -perm 444 -exec chmod 644 {} \;
find . -perm 400 -exec chmod 644 {} \;
find . -perm 440 -exec chmod 644 {} \;
find . -perm 777 -exec chmod 755 {} \;
find . -perm 775 -exec chmod 755 {} \;
find . -perm 511 -exec chmod 755 {} \;
find . -perm 711 -exec chmod 755 {} \;
find . -perm 555 -exec chmod 755 {} \;
zcat $CWD/file.quiet.diff.gz | patch -p1 -E --verbose || exit 1
zcat $CWD/file.short.diff.gz | patch -p1 -E --verbose || exit 1
zcat $CWD/file.zisofs.magic.gz >> magic/Magdir/compress

./configure \
  --prefix=/usr \
  --sysconfdir=/etc \
  --datadir=/etc \
  --enable-fsect-man5 \
  --libdir=$LIBDIR \
  --build=$ARCH-slackware-linux

make -j5 || exit $ERROR_MAKE
make install DESTDIR=$PKG || exit $ERROR_INSTALL

# Is file really this much of a processing bottleneck?  Doubtful.
# If you really need these (let's say you're doing virus scanning
# and this *would* speed things up quite a bit) you can create
# the pre-parsed files yourself using file's -C option.
rm -f $PKG/etc/file/magic.mgc $PKG/etc/file/magic.mime.mgc

# /etc/magic has been traditional for so long that it seems like a
# real good idea to provide a link:
( cd $PKG/etc
  ln -sf file/magic magic
)

# Strip everything for good measure:
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)
strip -g $PKG/usr/lib/libmagic.a

mkdir -p $PKG/usr/doc/file-$VERSION
cp -a \
  LEGAL.NOTICE README \
  $PKG/usr/doc/file-$VERSION

# Compress and if needed symlink the man pages:
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd $manpagedir
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink $eachpage ).gz $eachpage.gz
          rm $eachpage
        done
        gzip -9 *.?
      )
    done
  )
fi

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

# Build the package:
cd $PKG
makepkg -c y -l y $REPOS/$PACKAGE-$VERSION-$ARCH-$BUILD.tgz || exit $ERROR_MKPKG

if [ "$CLEANUP" == "yes" ]; then
  rm -rf $TMP
fi

