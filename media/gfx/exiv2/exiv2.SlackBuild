#!/bin/bash
#
#  exiv2 is free software; you can redistribute it and/or modify it under the
#  terms of the GNU General Public License as published by the Free Software
#  Foundation; either version 2 of the License, or any later version.
#
#  exiv2 is distributed in the hope that it will be useful, but WITHOUT ANY
#  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
#  A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License along with
#  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
#  Place - Suite 330, Boston, MA 02111-1307, USA
#
# slackbuild for exiv2, by Rudson R. Alves
# requires: none
# tested: exiv2-0.12

CWD=`pwd`

# ----  Inicializa variáveis com o slackbuild  ------------
if [ -e ~/.slackbuildrc ]; then
  source ~/.slackbuildrc
elif [ -e /etc/slackbuildrc ]; then
  source /etc/slackbuildrc
fi

# --------  Variáveis de controle de versão  --------------
# Nome da fonte para a qual o slackbuild foi construído e
# o seu md5sum
SRC_ORIG="exiv2-0.12.tar.gz"
MD5_ORIG="a97a4e489df7ec99458e3e33b506c3e6"
PACKAGE_ORIG=`echo $SRC_ORIG | sed -r 's/(.*)-(.*)\.(.*\..*)$/\1/'`
VERSION_ORIG=`echo $SRC_ORIG | sed -r 's/(.*)-(.*)\.(.*\..*)$/\2/'`
   EXTENSION=`echo $SRC_ORIG | sed -r 's/(.*)-(.*)\.(.*\..*)$/\3/'`

# -------  Códigos de erro para o createpkg  --------------
ERROR_WGET=31;      ERROR_MAKE=32;      ERROR_INSTALL=33
ERROR_MD5=34;       ERROR_CONF=35;      ERROR_HELP=36
ERROR_TAR=37;       ERROR_MKPKG=38;     ERROR_GPG=39
ERROR_PATCH=40;     ERROR_VCS=41

# ---------  Inicializa variáveis de entrada  -------------
PACKAGE=$PACKAGE_ORIG
ARCH=${ARCH:=i486}
SRC_DIR=${SRC:=$CWD}
VERSION=${VERSION:=$VERSION_ORIG}
SRC=$PACKAGE-$VERSION.$EXTENSION
BUILD=${BUILD:=1rud}
TMP=${TMP:=/tmp}
REPOS=${REPOS:=$TMP}
PREFIX=${PREFIX:=/usr}
OPTCONF=${OPTCONF:=""}
MD5=${MD5:=$MD5_ORIG}
URL=${URL:="http://www.exiv2.org/$SRC"}

# ----------------  Download fontes  ----------------------
# Fonte a ser compilada, com o path
SOURCE=$SRC_DIR/$PACKAGE/$SRC
# Verifica existência do pacote em $SRC em $SRC_DIR
if [ ! -e $SOURCE ]; then
    wget "$URL" -P "$SRC_DIR/$PACKAGE" || exit $ERROR_WGET
fi

# ------------------  Checa md5sum  -----------------------
if [ "$SRC_ORIG" = "$SRC" -o "$MD5" != "$MD5_ORIG" -a "$MD5" != "no" ]; then
    SUM=`md5sum $SOURCE | awk '{print $1}'`
    [ "$SUM" != "$MD5" ] && exit $ERROR_MD5
fi

# -----------------  ARCH e LIBDIR  -----------------------
# Libdir, para arch x86_64
LIBDIR=$PREFIX/lib
# Seleciona flags para o compilador
if [ "$ARCH" = "i386" ]; then
    SLKCFLAGS="-O2 -march=i386 -mcpu=i686"
elif [ "$ARCH" = "i486" ]; then
    SLKCFLAGS="-O2 -march=i486 -mcpu=i686"
elif [ "$ARCH" = "i686" ]; then
    SLKCFLAGS="-O2 -march=i686"
elif [ "$ARCH" = "s390" ]; then
    SLKCFLAGS="-O2"
elif [ "$ARCH" = "x86_64" ]; then
    SLKCFLAGS="-O2"
    LIBDIR="$PREFIX/lib64"
fi

# --------------  Desempacota fontes  ---------------------
# Desempacota fontes em PKG_SRC=$TMP/$PACKAGE-source
PKG_SRC=$TMP/$PACKAGE-source
rm -rf $PKG_SRC 2>/dev/null
mkdir -p $PKG_SRC
# Desempacota $SOURCE em $TMP/$PACKAGE-source
tar xvf $SOURCE -C $PKG_SRC || exit $ERROR_TAR

# Pega o nome do diretório das fontes independente de sua
# estrutura (package-version...)
PKG_DIR="$PKG_SRC/$( ls $PKG_SRC/ )"
cd $PKG_DIR

# --------------  Configura programa  ---------------------
# Configura programa
CFLAGS="$SLKCFLAGS" ./configure --prefix=$PREFIX --libdir=$LIBDIR $OPTCONF || exit $ERROR_CONF

# ----------------  Compila programa  ---------------------
make -j3 || exit $ERROR_MAKE

# -------------  Diretório Temporário  --------------------
# Cria diretório temporário para construção do pacote
PKG=$TMP/$PACKAGE
rm -rf $PKG
mkdir -p $PKG

# ---------------  Instala programa  ----------------------
# Instala programa em diretório temporário
make install DESTDIR=$PKG || exit $ERROR_INSTALL

# ---------------  Compacta manuais  ----------------------
gzip -r $PKG/shared/man/*

# -----------------  Stripa código  -----------------------
cd $PKG
find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

# ----------------  Cria slack-desc  ----------------------
mkdir $PKG/install
cat << EOF > install/slack-desc
# HOW TO EDIT THIS FILE:
# The "handy ruler" below makes it easier to edit a package description.  Line
# up the first '|' above the ':' following the base package name, and the '|' on
# the right side marks the last column you can put a character in.  You must make
# exactly 11 lines for the formatting to be correct.  It's also customary to
# leave one space after the ':'.

      |--------handy-ruler------------------------------------------------------|
exiv2: libdvdread.SlackBuild by Rudson R. Alves
exiv2:
exiv2: Exiv2 is a C++ library and a command line utility to access image
exiv2: metadata. Exiv2 is available as free software and with a commercial
exiv2: license, and is used in a growing number of projects.
exiv2: The Exiv2 library provides:
exiv2: - full read and write access to the Exif and IPTC metadata of an
exiv2: image through Exiv2 keys and standard C++ iterators
exiv2: - a smart IPTC implementation that does not affect data that
exiv2: programs like Photoshop store in the same image segment, ...
EOF

# -----------------  Documentações  -----------------------
# Criar diretório de documentação
PKG_DOC=$PKG/usr/doc/$PACKAGE-$VERSION
mkdir -p $PKG_DOC
cp $PKG_DIR/{COPYING,README} $PKG_DOC
cp -r $PKG_DIR/doc $PKG_DOC

# ---------------  Constroi o pacote  ---------------------
echo -e "\n\n\033[01;32m makepkg -c y -l y $REPOS/$PACKAGE-$VERSION-$ARCH-$BUILD.tgz \n\033[m"
makepkg -c y -l y $REPOS/$PACKAGE-$VERSION-$ARCH-$BUILD.tgz || exit $ERROR_MKPKG

# -----------  Remove arquivos temporários  ---------------
if [ "$CLEANUP" = "yes" ]; then
    rm -rf $PKG $PKG_SRC
fi
