#!/bin/sh
#
# slackbuild for libgpg-error from
# http://www.slacky.it/download/libraries/libgpg-error/1.3/src/libgpg-error.SlackBuild
#
# Heavily based on the Slackware 10.2 SlackBuild
# http://www.gnupg.org/(en)/download/index.html
#
# small changes by rhatto
#

CWD="`pwd`"

# default settings
PACKAGE="libgpg-error"
_VERSION="1.3"
_ARCH="i486"
_BUILD="1rha"
_TMP="/tmp"

if [ -f "/etc/slackbuildrc" ]; then
  source /etc/slackbuildrc
fi

if [ -f "~/.slackbuildrc" ]; then
  source ~/.slackbuildrc
fi

if [ -z "$VERSION" ]; then
  VERSION="$_VERSION"
fi

if [ -z "$ARCH" ]; then
  ARCH="$_ARCH"
fi

if [ -z "$BUILD" ]; then
  BUILD="$_BUILD"
fi

if [ "$ARCH" == "x86_64" ]; then
  LIBDIR=/usr/lib64
else
  LIBDIR=/usr/lib
fi

if [ -z "$SRC" ]; then
  SRC_DIR="$CWD"
else
  SRC_DIR="$SRC"
fi

if [ -z "$TMP" ]; then
  TMP="$_TMP"
fi

RTOOL="wget"
PACKAGE_EXT="bz2"
SRC="$PACKAGE-$VERSION.tar.$PACKAGE_EXT"
#KEY="http://www.courier-mta.org/KEYS.bin"
SRC="$PACKAGE-$VERSION.tar.$PACKAGE_EXT"
URL="http://ftp.gnupg.org/GnuPG/libgpg-error/$SRC"

if [ "$PACKAGE_EXT" == "bz2" ]; then
  tarflag="j"
else
  tarflag="z"
fi

if [ "$RTOOL" == "wget" ] && [ ! -f "$SRC_DIR/$SRC" ]; then
  wget "$URL" -O "$SRC_DIR/$SRC"
  wget "$URL.sig" -O "$SRC_DIR/$SRC.sig"
fi

# TODO: signature checking
#if [ ! -f "$SRC_DIR/$PACKAGE-key.asc" ]; then
#  wget "$KEY" -O "$SRC_DIR/$PACKAGE-key.asc" && gpg --import $SRC_DIR/$PACKAGE-key.asc
#fi

gpg --verify $SRC_DIR/$SRC.sig $SRC || echo WARNING: Could not check signature or WRONG signature found.

NAME="$PACKAGE"
PKG=$TMP/package-libgpg-error

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mcpu=i686"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mcpu=i686"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2"
fi

if [ ! -d $TMP ]; then
 mkdir -p $TMP
fi
if [ ! -d $PKG ]; then
 mkdir -p $PKG
fi

cd $TMP
tar xvf$tarflag $SRC_DIR/$NAME-$VERSION.tar.bz2
cd $NAME-$VERSION
chown -R root.root .
CFLAGS="$SLKCFLAGS" \
./configure --prefix=/usr --libdir=$LIBDIR \
--disable-static \
--program-prefix="" \
--program-suffix="" \
$ARCH-slackware-linux
make
make install DESTDIR=$PKG
mkdir -p $PKG/usr/doc/$NAME-$VERSION
cp -a ABOUT-NLS AUTHORS ChangeLog COPYING* INSTALL NEWS README $PKG/usr/doc/$NAME-$VERSION

( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

chown -R root.bin $PKG/usr/bin
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-desc > $PKG/usr/doc/$NAME-$VERSION/slack-desc
cat $CWD/$NAME.SlackBuild > $PKG/usr/doc/$NAME-$VERSION/$NAME.SlackBuild
echo 'chroot . /sbin/ldconfig' > $PKG/install/doinst.sh
cd $PKG
# requiredbuilder -v -y -s $CWD $PKG

makepkg -l y -c n $TMP/$NAME-$VERSION-$ARCH-$BUILD.tgz

if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP/$NAME-$VERSION
  rm -rf $PKG
fi
